---
import SectionHeading from './SectionHeading.astro';

const messageTemplate = `Hi there, hope you're having a great day!`;
const message = `Hi, SusomGPT ðŸ¤– here!  It looks like your message got a bit scrambled! ðŸ¤” 
    How about trying this: '${messageTemplate}' ðŸ˜„`;
---

<div class="max-w-screen-xl mx-auto px-12 py-12 md:py-32">
	<SectionHeading title="Contact" />
	<div class="w-[80%] mt-10 mx-auto">
		<form>
			<div>
				<label for="email" class="block mb-2 text-sm font-medium text-text-primary"
					>Your email</label
				>
				<input
					type="email"
					id="email"
					name="email"
					class="border border-border text-text-secondary text-sm rounded-lg block w-full p-2.5"
					placeholder="name@name.com"
					required
				/>
			</div>
			<div class="mt-4">
				<label for="subject" class="block mb-2 text-sm font-medium text-text-primary">Subject</label
				>
				<input
					name="subject"
					type="text"
					id="subject"
					class="border border-border text-text-secondary text-sm rounded-lg block w-full p-2.5"
					placeholder="Optional Subject"
				/>
			</div>
			<div class="sm:col-span-2 mt-4">
				<label for="message" class="block mb-2 text-sm font-medium text-text-primary"
					>Your message</label
				>
				<textarea
					required
					id="message"
					name="message"
					rows="6"
					class="border border-border text-text-secondary text-sm rounded-lg block w-full p-2.5"
					placeholder="Say Hi..."></textarea>
			</div>
			<button
				type="submit"
				class="py-3 px-5 mt-4 font-medium text-center text-text-on-accent rounded-lg bg-accent-primary hover:bg-accent-primary/70 sm:w-fit"
				>Send message</button
			>
		</form>
	</div>
</div>

<!-- Template Modal -->
<dialog data-template-modal>
	<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
		<div class="bg-background p-6 rounded-lg max-w-lg w-full mx-4">
			<div class="p-4 rounded mb-4 whitespace-pre-line">
				{message}
			</div>
			<div class="flex justify-end gap-4">
				<button
					data-close-modal
					class="border border-border rounded px-4 py-2 text-text-primary hover:text-text-primary/60"
					>Close</button
				>
				<button
					data-use-template
					class="px-4 py-2 bg-accent-primary text-text-on-accent rounded hover:bg-accent-primary/70">
					Use Template
				</button>
			</div>
		</div>
	</div>
</dialog>

<script define:vars={{ messageTemplate }}>
	document.addEventListener('DOMContentLoaded', () => {
		const templateModal = document.querySelector('[data-template-modal]');

		document.querySelector('form').addEventListener('submit', submitForm);
		// Your existing JavaScript code here
		document.querySelector('[data-close-modal]').addEventListener('click', () => {
			templateModal.close();
		});

		document.querySelector('[data-use-template]').addEventListener('click', () => {
			document.getElementById('message').value = messageTemplate;
			templateModal.close();
		});

		async function submitForm(event) {
			event.preventDefault(); // Prevent default form submission

			// Validate message first
			// if (!validateMessage(event)) {
			// 	return;
			// }

			// Collect form data
			const form = event.target;
			const formData = new FormData(form);

			try {
				// Send to Formspree
				const response = await fetch('https://formspree.io/f/xlekkqqk', {
					method: 'POST',
					body: formData,
					headers: {
						Accept: 'application/json',
					},
				});

				if (response.ok) {
					// Success handling
					alert('Message sent successfully!');
					form.reset(); // Clear form fields
				} else {
					// Error handling
					const errorData = await response.json();
					alert('There was an error sending your message. Please try again.');
					console.error('Formspree error:', errorData);
				}
			} catch (error) {
				// Network or other errors
				alert(
					'There was a problem sending your message. Please check your connection and try again.'
				);
				console.error('Submission error:', error);
			}
		}

		// function validateMessage() {
		// 	const messageField = document.getElementById('message');
		// 	const message = messageField.value.trim();

		// 	// Check if message is good

		// 	if (isRandom) {
		// 		templateModal.showModal();
		// 		return false;
		// 	}

		// 	return true;
		// }
	});
</script>
